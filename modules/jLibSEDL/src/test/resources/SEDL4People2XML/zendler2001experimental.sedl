import Charts
/* This experiment description is part of the material of the paper on the SEDL meta-model and EXEMPLAR to be published
   
    Experiment of the paper:
     Andreas Zendler, Till Pfeiffer, Michael Eicks, Franz Lehner
     "Experimental comparison of coarse-grained concepts in UML, OML, and TOS"
      The Journal of Systems and Software 57 2001) 21-30
      
   Object-oriented approaches over coarse-grained modeling concepts to structure complex application systems consisting of
hundreds or even thousands of classes. This paper analyses such concepts by using a software engineering experiment. Two factors
are controlled: Factor A consists of three object-oriented approaches (uniÂ®ed modeling language (UML), OPEN modeling language
(OML), and taxonomic objectsystem (TOS)), and factor B consists of two application systems (a database-oriented application and
a process-oriented application). The results show that the coarse-grained concepts of the object-oriented approaches OML and
TOS are superior to those of UML when modeling a database-oriented application. From the results it can be concluded that the
coarse-grained concepts of UML should be improved in further releases. The data were analysed by using advanced statistical
methods.

Criticism: No explicit research hypothesis were stated in the paper (statistical hypothese are stated however) so it is difficult
to trace the relation of the results of the statistical hypothesis with the research questions.
   
*/
EXPERIMENT: Zendler2001Experiment version: 1.0 
Subjects:
	Andreas Zendler (zna@mgm-edv.de) from 'University of Potsdam' as Responsible
	Till Pfeiffer () from 'University of Regensburg' as Collaborator
	Michael Eicks () from 'University of Regensburg' as Collaborator
	Franz Lehner () from 'University of Regensburg' as Collaborator
Variables :
	Factors :
		//randomly assigned
		oo_aproach enum 'UML', 'OML', 'TOS'
		//database-oriented system or process-oriented system
		app_system enum 'DBOA', 'POA'
	Outcome :
		// Time needed to structure an application system in minutes; it is interpreted as an efficiency measure
		ts float  measured in minutes
		qs ordered enum 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
Hypothesis: 
	H1: oo_aproach, app_system impacts significantly on ts
	// Quality of system structure
	H3: oo_aproach, app_system impacts significantly on qs
/*
A split plot factorial (SPF) 3 x 2 design (a two-factor design with repeated measurements for factor B)
*/
Design :
	Sampling : Random
	Groups : 
		G-UML(oo_aproach:"UML" ) sizing 5,
		G-OML(oo_aproach:"OML" ) sizing 5,
		G-TOS(oo_aproach:"TOS" ) sizing 5
	Protocol : 
		Treatment G-UML(app_system:'DBOA' )
		Treatment G-OML(app_system:'DBOA' )
		Treatment G-TOS(app_system:'DBOA' )
		Treatment G-UML(app_system:'POA' )
		Treatment G-OML(app_system:'POA' )
		Treatment G-TOS(app_system:'POA' )

	Analyses :
		DescriptiveStatistics:
			Avg(by oo_aproach,app_system)
			Median(by oo_aproach,app_system)
			StdDev(by oo_aproach,app_system)
			Charts::BoxPlot by app_system 
			Charts::BoxPlot by app_system 
		NHST:
			KruskalWalls(where app_system='DBOA' by oo_aproach, 0.05)
			KruskalWalls(where app_system='POA' by oo_aproach, 0.05)
			Chi Square(by app_system,oo_aproach, 0.05)
